CREATE DATABASE IF NOT EXISTS OLIT_DB;

CREATE TABLE IF NOT EXISTS CUSTOMERS (
    CUSTOMER_ID VARCHAR(255) PRIMARY KEY,
    CUSTOMER_UNIQUE_ID VARCHAR(255),
    ZIP_CODE_PREFIX INT,
    CITY VARCHAR(255),
    STATE CHAR(2)
);

CREATE TABLE IF NOT EXISTS CATEGORY_NAMES (
    PRODUCT_CATEGORY_NAME VARCHAR(255) PRIMARY KEY,
    PRODUCT_CATEGORY_NAME_ENGLISH VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS ORDERS (
    ORDER_ID VARCHAR(255) PRIMARY KEY,
    CUSTOMER_ID VARCHAR(255),
    STATUS VARCHAR(255),
    ORDER_PURCHASE_TIMESTAMP TIMESTAMPTZ,
    ORDER_APPROVED_AT TIMESTAMPTZ,
    ORDER_DELIVERED_CARRIER_DATE TIMESTAMPTZ,
    ORDER_DELIVERED_CUSTOMER_DATE TIMESTAMPTZ,
    ORDER_ESTIMATED_DELIVERY_DATE TIMESTAMPTZ,
    FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMERS(CUSTOMER_ID)
);

CREATE TABLE IF NOT EXISTS PAYMENTS (
    ORDER_ID VARCHAR(255),
    PAYMENT_SEQUENTIAL INT,
    PAYMENT_TYPE VARCHAR(255),
    PAYMENT_INSTALLMENTS INT,
    PAYMENT_VALUE FLOAT,
    FOREIGN KEY (ORDER_ID) REFERENCES ORDERS(ORDER_ID)
);

CREATE TABLE IF NOT EXISTS PRODUCTS (
    PRODUCT_ID VARCHAR(255) PRIMARY KEY,
    PRODUCT_CATEGORY_NAME VARCHAR(255),
    PRODUCT_NAME_LENGTH INT,
    PRODUCT_DESCRIPTION_LENGTH INT,
    PRODUCT_PHOTOS_QTY INT,
    PRODUCT_WEIGHT_G FLOAT,
    PRODUCT_LENGTH_CM FLOAT,
    PRODUCT_HEIGHT_CM FLOAT,
    PRODUCT_WIDTH_CM FLOAT,
    FOREIGN KEY (PRODUCT_CATEGORY_NAME) REFERENCES CATEGORY_NAMES(PRODUCT_CATEGORY_NAME)
);

CREATE TABLE IF NOT EXISTS ORDER_ITEMS (
    ORDER_ID VARCHAR(255),
    ORDER_ITEM_ID VARCHAR(255),
    PRODUCT_ID VARCHAR(255),
    SELLER_ID VARCHAR(255),
    SHIPPING_LIMIT_DATE TIMESTAMPTZ,
    PRICE FLOAT,
    FREIGHT_VALUE FLOAT,
    FOREIGN KEY (ORDER_ID) REFERENCES ORDERS(ORDER_ID),
    FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCTS(PRODUCT_ID)
);

CREATE TABLE IF NOT EXISTS REVIEWS (
    REVIEW_ID VARCHAR(255) PRIMARY KEY,
    ORDER_ID VARCHAR(255),
    REVIEW_SCORE INT,
    REVIEW_COMMENT_TITLE VARCHAR(255),
    REVIEW_COMMENT_MESSAGE TEXT,
    REVIEW_CREATION_DATE TIMESTAMPTZ,
    REVIEW_ANSWER_TIMESTAMP TIMESTAMPTZ,
    FOREIGN KEY (ORDER_ID) REFERENCES ORDERS(ORDER_ID)
);